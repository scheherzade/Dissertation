\begin{thebibliography}{10}

\bibitem{grubel2015performance}
Patricia Grubel, Hartmut Kaiser, Jeanine Cook, and Adrian Serio.
\newblock The performance implication of task size for applications on the hpx
  runtime system.
\newblock In {\em 2015 IEEE International Conference on Cluster Computing},
  pages 682--689. IEEE, 2015.

\bibitem{grubel2016using}
Patricia Grubel, Hartmut Kaiser, Kevin Huck, and Jeanine Cook.
\newblock Using intrinsic performance counters to assess efficiency in
  task-based parallel applications.
\newblock In {\em 2016 IEEE International Parallel and Distributed Processing
  Symposium Workshops (IPDPSW)}, pages 1692--1701. IEEE, 2016.

\bibitem{kaiser2014hpx}
Hartmut Kaiser, Thomas Heller, Bryce Adelstein-Lelbach, Adrian Serio, and
  Dietmar Fey.
\newblock Hpx: A task based programming model in a global address space.
\newblock In {\em Proceedings of the 8th International Conference on
  Partitioned Global Address Space Programming Models}, page~6. ACM, 2014.

\bibitem{bennett2015asynchronous}
J~Bennett, R~Clay, G~Baker, M~Gamell, D~Hollman, S~Knight, H~Kolla,
  G~Sjaardema, N~Slattengren, K~Teranishi, et~al.
\newblock Asynchronous many-task runtime system analysis and assessment for
  next generation platforms.
\newblock {\em US Department of Energy, Sandia National Laboratories Report,
  Rep. no. SAND2015-8312}, 2015.

\bibitem{whaley1998automatically}
R~Clinton Whaley and Jack~J Dongarra.
\newblock Automatically tuned linear algebra software.
\newblock In {\em SC'98: Proceedings of the 1998 ACM/IEEE conference on
  Supercomputing}, pages 38--38. IEEE, 1998.

\bibitem{puschel2005spiral}
Markus Puschel, Jos{\'e}~MF Moura, Jeremy~R Johnson, David Padua, Manuela~M
  Veloso, Bryan~W Singer, Jianxin Xiong, Franz Franchetti, Aca Gacic, Yevgen
  Voronenko, et~al.
\newblock Spiral: Code generation for dsp transforms.
\newblock {\em Proceedings of the IEEE}, 93(2):232--275, 2005.

\bibitem{gunther2000practical}
Neil~J Gunther.
\newblock The practical performance analyst. iuniverse. com inc.
\newblock {\em Lincoln, Nebraska}, 2000.

\bibitem{gunther2002new}
Neil~J Gunther.
\newblock A new interpretation of amdahl's law and geometric scalability.
\newblock {\em arXiv preprint cs/0210017}, 2002.

\bibitem{gunther2007guerrilla}
Neil~J Gunther.
\newblock {\em What is guerrilla capacity planning?}
\newblock Springer, 2007.

\bibitem{gunther2011new}
Neil~J Gunther.
\newblock A new interpretation of amdahl’s law and geometric scaling.
\newblock {\em arXiv preprint cs/0210017}, 2011.

\bibitem{kulkarni2019comparative}
Abhishek Kulkarni and Andrew Lumsdaine.
\newblock A comparative study of asynchronous many-tasking runtimes: Cilk,
  charm++, parallex and am++.
\newblock {\em arXiv preprint arXiv:1904.00518}, 2019.

\bibitem{wienke2012openacc}
Sandra Wienke, Paul Springer, Christian Terboven, and Dieter an~Mey.
\newblock Openacc—first experiences with real-world applications.
\newblock In {\em European Conference on Parallel Processing}, pages 859--870.
  Springer, 2012.

\bibitem{munshi2009opencl}
Aaftab Munshi.
\newblock The opencl specification.
\newblock In {\em 2009 IEEE Hot Chips 21 Symposium (HCS)}, pages 1--314. IEEE,
  2009.

\bibitem{nvidia2011nvidia}
CUDA Nvidia.
\newblock Nvidia cuda c programming guide.
\newblock {\em Nvidia Corporation}, 120(18):8, 2011.

\bibitem{reinders2007intel}
James Reinders.
\newblock {\em Intel threading building blocks: outfitting C++ for multi-core
  processor parallelism}.
\newblock " O'Reilly Media, Inc.", 2007.

\bibitem{blumofe1996cilk}
Robert~D Blumofe, Christopher~F Joerg, Bradley~C Kuszmaul, Charles~E Leiserson,
  Keith~H Randall, and Yuli Zhou.
\newblock Cilk: An efficient multithreaded runtime system.
\newblock {\em Journal of parallel and distributed computing}, 37(1):55--69,
  1996.

\bibitem{dagum1998openmp}
Leonardo Dagum and Ramesh Menon.
\newblock Openmp: An industry-standard api for shared-memory programming.
\newblock {\em Computing in Science \& Engineering}, (1):46--55, 1998.

\bibitem{mpi1994message}
MPI Mpi.
\newblock A message passing interface standard.
\newblock {\em International Journal of Supercomputer Applications},
  8(3/4):165--414, 1994.

\bibitem{kale1993charm++}
Laxmikant~V Kale and Sanjeev Krishnan.
\newblock Charm++: a portable concurrent object oriented system based on c++.
\newblock In {\em OOPSLA}, volume~93, pages 91--108. Citeseer, 1993.

\bibitem{kaiser2009parallex}
Hartmut Kaiser, Maciek Brodowicz, and Thomas Sterling.
\newblock Parallex an advanced parallel execution model for scaling-impaired
  applications.
\newblock In {\em 2009 International Conference on Parallel Processing
  Workshops}, pages 394--401. IEEE, 2009.

\bibitem{germain2000uintah}
J~Davison de~St Germain, John McCorquodale, Steven~G Parker, and Christopher~R
  Johnson.
\newblock Uintah: A massively parallel problem solving environment.
\newblock In {\em Proceedings the Ninth International Symposium on
  High-Performance Distributed Computing}, pages 33--41. IEEE, 2000.

\bibitem{bauer2012legion}
Michael Bauer, Sean Treichler, Elliott Slaughter, and Alex Aiken.
\newblock Legion: Expressing locality and independence with logical regions.
\newblock In {\em SC'12: Proceedings of the International Conference on High
  Performance Computing, Networking, Storage and Analysis}, pages 1--11. IEEE,
  2012.

\bibitem{gao2007parallex}
Guang~R Gao, Thomas Sterling, Rick Stevens, Mark Hereld, and Weirong Zhu.
\newblock Parallex: A study of a new parallel computation model.
\newblock In {\em 2007 IEEE International Parallel and Distributed Processing
  Symposium}, pages 1--6. IEEE, 2007.

\bibitem{iglberger2012expression}
Klaus Iglberger, Georg Hager, Jan Treibig, and Ulrich R{\"u}de.
\newblock Expression templates revisited: a performance analysis of current
  methodologies.
\newblock {\em SIAM Journal on Scientific Computing}, 34(2):C42--C69, 2012.

\bibitem{veldhuizen1995expression}
Todd Veldhuizen.
\newblock Expression templates.
\newblock {\em C++ Report}, 7(5):26--31, 1995.

\bibitem{Blitz}
{Blitz++ Library}.
\newblock \url{http://www.oonumerics.org/blitz/}.

\bibitem{ublas}
{Boost uBLAS Library}.
\newblock
  \url{http://www.boost.org/doc/libs/1_45_0/libs/numeric/ublas/doc/index.htm.}

\bibitem{MTL}
{MTL4 Library}.
\newblock \url{http://www.simunova.com/de/mtl4}.

\bibitem{guennebaud2010eigen}
Ga{\"e}l Guennebaud, Benoit Jacob, et~al.
\newblock Eigen.
\newblock {\em URl: http://eigen. tuxfamily. org}, 2010.

\bibitem{grama2003introduction}
Ananth Grama, Vipin Kumar, Anshul Gupta, and George Karypis.
\newblock {\em Introduction to parallel computing}.
\newblock Pearson Education, 2003.

\bibitem{amdahl1967validity}
Gene~M Amdahl.
\newblock Validity of the single processor approach to achieving large scale
  computing capabilities.
\newblock In {\em Proceedings of the April 18-20, 1967, spring joint computer
  conference}, pages 483--485. ACM, 1967.

\bibitem{ciorba2018openmp}
Florina~M Ciorba, Christian Iwainsky, and Patrick Buder.
\newblock Openmp loop scheduling revisited: making a case for more schedules.
\newblock In {\em International Workshop on OpenMP}, pages 21--36. Springer,
  2018.

\bibitem{liu1994safe}
Jie Liu, Vikram~A Saletore, and Ted~G Lewis.
\newblock Safe self-scheduling: a parallel loop scheduling scheme for
  shared-memory multiprocessors.
\newblock {\em International Journal of Parallel Programming}, 22(6):589--616,
  1994.

\bibitem{philip1995increasing}
Teebu Philip.
\newblock {\em Increasing chunk size loop scheduling algorithms for data
  independent loops}.
\newblock PhD thesis, Citeseer, 1995.

\bibitem{polychronopoulos1987guided}
Constantine~D Polychronopoulos and David~J Kuck.
\newblock Guided self-scheduling: A practical scheduling scheme for parallel
  supercomputers.
\newblock {\em Ieee transactions on computers}, 100(12):1425--1439, 1987.

\bibitem{hummel1992factoring}
Susan~Flynn Hummel, Edith Schonberg, and Lawrence~E Flynn.
\newblock Factoring: A method for scheduling parallel loops.
\newblock {\em Communications of the ACM}, 35(8):90--102, 1992.

\bibitem{tzen1993trapezoid}
Ten~H Tzen and Lionel~M Ni.
\newblock Trapezoid self-scheduling: A practical scheduling scheme for parallel
  compilers.
\newblock {\em IEEE Transactions on parallel and distributed systems},
  4(1):87--98, 1993.

\bibitem{lilja1994exploiting}
David~J Lilja.
\newblock Exploiting the parallelism available in loops.
\newblock {\em Computer}, 27(2):13--26, 1994.

\bibitem{mohammed2018experimental}
Ali Mohammed, Ahmed Eleliemy, Florina~M Ciorba, Franziska Kasielke, and Ioana
  Banicescu.
\newblock Experimental verification and analysis of dynamic loop scheduling in
  scientific applications.
\newblock In {\em 2018 17th International Symposium on Parallel and Distributed
  Computing (ISPDC)}, pages 141--148. IEEE, 2018.

\bibitem{blumofe1999scheduling}
Robert~D Blumofe and Charles~E Leiserson.
\newblock Scheduling multithreaded computations by work stealing.
\newblock {\em Journal of the ACM (JACM)}, 46(5):720--748, 1999.

\bibitem{donfack2012hybrid}
Simplice Donfack, Laura Grigori, William~D Gropp, and Vivek Kale.
\newblock Hybrid static/dynamic scheduling for already optimized dense matrix
  factorization.
\newblock In {\em 2012 IEEE 26th International Parallel and Distributed
  Processing Symposium}, pages 496--507. IEEE, 2012.

\bibitem{malakar2018benchmarking}
Preeti Malakar, Prasanna Balaprakash, Venkatram Vishwanath, Vitali Morozov, and
  Kalyan Kumaran.
\newblock Benchmarking machine learning methods for performance modeling of
  scientific applications.
\newblock In {\em 2018 IEEE/ACM Performance Modeling, Benchmarking and
  Simulation of High Performance Computer Systems (PMBS)}, pages 33--44. IEEE,
  2018.

\bibitem{blagojevic2008modeling}
Filip Blagojevic, Xizhou Feng, Kirk~W Cameron, and Dimitrios~S Nikolopoulos.
\newblock Modeling multigrain parallelism on heterogeneous multi-core
  processors: a case study of the cell be.
\newblock In {\em International Conference on High-Performance Embedded
  Architectures and Compilers}, pages 38--52. Springer, 2008.

\bibitem{kerbyson2001predictive}
Darren~J Kerbyson, Henry~J Alme, Adolfy Hoisie, Fabrizio Petrini, Harvey~J
  Wasserman, and Mike Gittings.
\newblock Predictive performance and scalability modeling of a large-scale
  application.
\newblock In {\em SC'01: Proceedings of the 2001 ACM/IEEE Conference on
  Supercomputing}, pages 39--39. IEEE, 2001.

\bibitem{valiant1990bridging}
Leslie~G Valiant.
\newblock A bridging model for parallel computation.
\newblock {\em Communications of the ACM}, 33(8):103--111, 1990.

\bibitem{lee2007methods}
Benjamin~C Lee, David~M Brooks, Bronis~R de~Supinski, Martin Schulz, Karan
  Singh, and Sally~A McKee.
\newblock Methods of inference and learning for performance modeling of
  parallel applications.
\newblock In {\em Proceedings of the 12th ACM SIGPLAN symposium on Principles
  and practice of parallel programming}, pages 249--258. ACM, 2007.

\bibitem{sun2017automated}
Jingwei Sun, Shiyan Zhan, Guangzhong Sun, and Yong Chen.
\newblock Automated performance modeling based on runtime feature detection and
  machine learning.
\newblock In {\em 2017 IEEE International Symposium on Parallel and Distributed
  Processing with Applications and 2017 IEEE International Conference on
  Ubiquitous Computing and Communications (ISPA/IUCC)}, pages 744--751. IEEE,
  2017.

\bibitem{pllana2007performance}
Sabri Pllana, Ivona Brandic, and Siegfried Benkner.
\newblock Performance modeling and prediction of parallel and distributed
  computing systems: A survey of the state of the art.
\newblock In {\em First International Conference on Complex, Intelligent and
  Software Intensive Systems (CISIS'07)}, pages 279--284. IEEE, 2007.

\bibitem{ipek2005approach}
Engin Ipek, Bronis~R De~Supinski, Martin Schulz, and Sally~A McKee.
\newblock An approach to performance prediction for parallel applications.
\newblock In {\em European Conference on Parallel Processing}, pages 196--205.
  Springer, 2005.

\bibitem{falgout2002hypre}
Robert~D Falgout and Ulrike~Meier Yang.
\newblock hypre: A library of high performance preconditioners.
\newblock In {\em International Conference on Computational Science}, pages
  632--641. Springer, 2002.

\bibitem{liu2018runtime}
Jiawen Liu, Dong Li, Gokcen Kestor, and Jeffrey Vetter.
\newblock Runtime concurrency control and operation scheduling for high
  performance neural network training.
\newblock {\em arXiv preprint arXiv:1810.08955}, 2018.

\bibitem{qawasmeh2015adaptive}
Ahmad Qawasmeh, Abid~M Malik, and Barbara~M Chapman.
\newblock Adaptive openmp task scheduling using runtime apis and machine
  learning.
\newblock In {\em 2015 IEEE 14th International Conference on Machine Learning
  and Applications (ICMLA)}, pages 889--895. IEEE, 2015.

\bibitem{wang2009mapping}
Zheng Wang and Michael~FP O'Boyle.
\newblock Mapping parallelism to multi-cores: a machine learning based
  approach.
\newblock In {\em ACM Sigplan notices}, volume~44, pages 75--84. ACM, 2009.

\bibitem{Boost}
{Boost C++ Framework}.
\newblock \url{https://www.boost.org}.

\bibitem{GMM++}
{Gmm++ Library}.
\newblock \url{http://getfem.org/gmm/}.

\bibitem{sanderson2016armadillo}
Conrad Sanderson and Ryan Curtin.
\newblock Armadillo: a template-based c++ library for linear algebra.
\newblock {\em Journal of Open Source Software}, 1(2):26, 2016.

\bibitem{Eigen}
{Eigen Library}.
\newblock \url{http://eigen.tuxfamily.org/}.

\bibitem{ATLAS}
{Automatically Tuned Linear Algebra Software}.
\newblock \url{http://math-atlas.sourceforge.net/}.

\bibitem{gotoblas}
{GotoBLAS2}.
\newblock
  \url{https://www.tacc.utexas.edu/research-development/tacc-software/gotoblas2}.

\bibitem{MKL}
{Intel Math Kernel Library}.
\newblock \url{https://software.intel.com/en-us/mkl}.

\end{thebibliography}
